# config.py
import os
import json

DEFAULT_CONFIG = {
    "autostart": False,
    "opacity": 1.0,
    "language": "ru"
}

def load_config():
    settings_file = "settings.json"
    if os.path.exists(settings_file):
        try:
            with open(settings_file, "r") as f:
                data = f.read().strip()
                if not data:
                    return DEFAULT_CONFIG
                full_settings = json.loads(data)
                # Возвращаем только часть настроек, относящуюся к config
                return {
                    "autostart": full_settings.get("autostart", DEFAULT_CONFIG["autostart"]),
                    "opacity": full_settings.get("opacity", DEFAULT_CONFIG["opacity"]),
                    "language": full_settings.get("language", DEFAULT_CONFIG["language"])
                }
        except (json.JSONDecodeError, ValueError) as e:
            print(f"Ошибка загрузки config из settings.json: {e}. Используются настройки по умолчанию.")
            return DEFAULT_CONFIG
    return DEFAULT_CONFIG

def save_config(config):
    settings_file = "settings.json"
    full_settings = load_full_settings()  # Загружаем текущие настройки
    full_settings.update(config)  # Обновляем только часть config
    try:
        with open(settings_file, "w") as f:
            json.dump(full_settings, f)
    except Exception as e:
        print(f"Ошибка сохранения config в settings.json: {e}")

def load_full_settings():
    settings_file = "settings.json"
    if os.path.exists(settings_file):
        try:
            with open(settings_file, "r") as f:
                data = f.read().strip()
                if data:
                    return json.loads(data)
        except (json.JSONDecodeError, ValueError):
            pass
    return {}

def set_autostart(enable):
    import winreg
    key = r"Software\Microsoft\Windows\CurrentVersion\Run"
    app_name = "LolzteamMonitor"
    exe_path = os.path.abspath(__file__).replace("config.py", "ui.py")

    try:
        reg_key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, key, 0, winreg.KEY_ALL_ACCESS)
        if enable:
            winreg.SetValueEx(reg_key, app_name, 0, winreg.REG_SZ, f'"{exe_path}"')
        else:
            try:
                winreg.DeleteValue(reg_key, app_name)
            except FileNotFoundError:
                pass
        winreg.CloseKey(reg_key)
    except Exception as e:
        print(f"Ошибка настройки автозапуска: {e}")
